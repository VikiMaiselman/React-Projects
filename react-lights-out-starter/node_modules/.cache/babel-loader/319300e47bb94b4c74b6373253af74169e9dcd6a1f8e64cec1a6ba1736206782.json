{"ast":null,"code":"var _jsxFileName = \"/Users/victoriamaizelman/Desktop/React/react-lights-out-starter/src/Cell.js\";\nimport React, { Component } from 'react';\nimport \"./Cell.css\";\n\n/** A single cell on the board.\n *\n * This has no state --- just two props:\n *\n * - flipCellsAroundMe: a function rec'd from the board which flips this\n *      cell and the cells around of it\n *\n * - isLit: boolean, is this cell lit?\n *\n * This handles clicks --- by calling flipCellsAroundMe\n *\n **/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Cell extends Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n  }\n  handleClick(evt) {\n    // call up to the board to flip cells around this cell\n    this.props.flipCellsAroundMe(evt.target.id);\n  }\n  render() {\n    let classes = \"Cell\" + (this.props.isLit ? \" Cell-lit\" : \"\");\n    return /*#__PURE__*/_jsxDEV(\"td\", {\n      id: this.props.id,\n      className: classes,\n      onClick: this.handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this);\n  }\n}\nexport default Cell;","map":{"version":3,"names":["React","Component","jsxDEV","_jsxDEV","Cell","constructor","props","handleClick","bind","evt","flipCellsAroundMe","target","id","render","classes","isLit","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/victoriamaizelman/Desktop/React/react-lights-out-starter/src/Cell.js"],"sourcesContent":["import React, {Component} from 'react'\nimport \"./Cell.css\"\n\n\n/** A single cell on the board.\n *\n * This has no state --- just two props:\n *\n * - flipCellsAroundMe: a function rec'd from the board which flips this\n *      cell and the cells around of it\n *\n * - isLit: boolean, is this cell lit?\n *\n * This handles clicks --- by calling flipCellsAroundMe\n *\n **/\n\nclass Cell extends Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(evt) {\n    // call up to the board to flip cells around this cell\n    this.props.flipCellsAroundMe(evt.target.id);\n  }\n\n  render() {\n    let classes = \"Cell\" + (this.props.isLit ? \" Cell-lit\" : \"\");\n\n    return (\n        <td id={this.props.id} className={classes} onClick={this.handleClick} />\n    )\n  }\n}\n\n\nexport default Cell"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,SAAS,QAAO,OAAO;AACtC,OAAO,YAAY;;AAGnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA,SAAAC,MAAA,IAAAC,OAAA;AAaA,MAAMC,IAAI,SAASH,SAAS,CAAC;EAC3BI,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,WAAW,GAAG,IAAI,CAACA,WAAW,CAACC,IAAI,CAAC,IAAI,CAAC;EAChD;EAEAD,WAAWA,CAACE,GAAG,EAAE;IACf;IACA,IAAI,CAACH,KAAK,CAACI,iBAAiB,CAACD,GAAG,CAACE,MAAM,CAACC,EAAE,CAAC;EAC7C;EAEAC,MAAMA,CAAA,EAAG;IACP,IAAIC,OAAO,GAAG,MAAM,IAAI,IAAI,CAACR,KAAK,CAACS,KAAK,GAAG,WAAW,GAAG,EAAE,CAAC;IAE5D,oBACIZ,OAAA;MAAIS,EAAE,EAAE,IAAI,CAACN,KAAK,CAACM,EAAG;MAACI,SAAS,EAAEF,OAAQ;MAACG,OAAO,EAAE,IAAI,CAACV;IAAY;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAE9E;AACF;AAGA,eAAejB,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}